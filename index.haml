!!! Static
%html
  %head
    %title yay
    %script{:src=>"/jquery.js"}            
    %script{:src=>"/baconl.js"}
    %script{:src=>"/cicada.js"}    
    
    %style
      :plain
        body , div , h1 , h2, h3 {
          margin:0;
          padding:0;
          font-family: 'trebuchet ms', verdana, arial;
          font-size: 14px;
          display: block;
        }
        h1 {
          background-color: #556;
          color: #fff;
          height: 40px;
          line-height: 40px;          
          padding: 0 10px;
        }
        .right {
          float: right;
        }
        .clear {
          clear: both;
        }
        div.cicada-component-section.highlighted {
          border: 3px solid #F0F
        }
        div.cicada-component-plugin.highlighted {
          border: 3px solid #F00
        }
        
  %body
    %h1 Cicada
    %p 
      Cicada Sections can be highlighted by clicking 
      <a href="javascript:$('.cicada-component-section').toggleClass('highlighted');void(0);">here</a>.
    %p
      Cicada Plugins can be highlighted by clicking 
      <a href="javascript:$('.cicada-component-plugin').toggleClass('highlighted');void(0);">here</a>.

    %hr/
    #current-time.right
    #alerts.right.clear 
    #user-names
      %h2 User names

    :javascript
      var c = new Cicada();
      c.registerSection( "user-names" , "#user-names");
      c.registerSection( "time" , "#current-time" );
      c.registerSection( "alerts" , "#alerts" );

      c.registerPlugin( "alerts" , function( timeElement ){
        c.registerObjectListener( "Time" , function( time ) {
          timeElement.empty();
          var mins = time.getMinutes() < 10 ? "0" + time.getMinutes() : time.getMinutes();
          var secs = time.getSeconds() < 10 ? "0" + time.getSeconds() : time.getSeconds();

          timeElement.append( time.getHours() , ":" ,  mins , "." , secs );
        });

      });

      c.registerPlugin( "time" , function( timeElement ){
        c.registerObjectListener( "Time" , function( time ) {
          timeElement.empty();
          var mins = time.getMinutes() < 10 ? "0" + time.getMinutes() : time.getMinutes();
          timeElement.append( time.getHours() , ":" ,  mins );
        });
      } );

      c.registerPlugin( "user-names" , function( userCount ) {
        c.registerObjectListener( "Users" , function( users ) {
          userCount.empty().append( "No. of users: " , users.length );
        });
      });  

      c.registerPlugin( "user-names" , function( el ){
        var input = $.baconl("%input");
        var userInputForm = $.baconl("%form")
          .append( $.baconl("%p").text("Enter a name and press enter. ") )
          .append( input )
          .submit( function() {
            var users = c.retrieve( "Users" );
            users.push( {
              name: input.val()
            });
            input.val("").focus();
            c.registerObject( "Users" , users );
            return false;

          });
        el.append( userInputForm );
      });

      c.registerPlugin( "user-names" , function( el ) {
        var usersList = $.baconl("%ol.users-list");
        c.registerObjectListener( "Users" , function( users ) {
          usersList.empty();
          $.each( users , function( index , object ) {
            var item = $.baconl("%li").text( object.name );
            usersList.append( item );
          } );
        });
        el.append( usersList );
      });

      function updateTime() {
        c.registerObject("Time" , new Date() );
      }

      $(window).ready( function(){ 
        c.initializePlugins() 
        c.registerObject("Users" , [{name:"Default user"}]);
        setInterval(updateTime , 1000 );
      } );